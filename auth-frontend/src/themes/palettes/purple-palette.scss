// This file was generated by running 'ng generate @angular/material:theme-color'.
// Proceed with caution if making changes to this file.

@use 'sass:map';
@use '@angular/material' as mat;

// Note: Color palettes are generated from primary: #6f55b6

// Define the tonal palettes based on Material Design 3 color roles.
// Each palette contains tones from 0 (black) to 100 (white).
// The specific tone used for a UI element depends on the theme (light/dark)
// and the component's configuration.
$_palettes: (
  /*
   * PRIMARY color palette.
   * Purpose: Main brand color, used for key components and actions to draw attention.
   * Typical Uses: Primary buttons, active states (tabs, navigation), headers, Floating Action Buttons (FABs).
   */
  primary: (
    0: #000000,
    10: #22005d, // Example: Text/icon color on a primary background in a dark theme
    20: #e8ddff, // buttons text dark theme example: create button
    25: #432788,
    30: #4f3494,
    35: #5b40a1,
    40: #cfbdff, // Example: Button background in a light theme
    50: #8066c9,
    60: #9b80e5,
    70: #b69cff, // Example: terms & conditions & outline color on focused input fields
    80: #6e54b5, // Example: Button background in a dark theme (This is the source color)
    90: #e8ddff, // Example: Container background in a light theme
    95: #f5eeff,
    98: #fdf7ff,
    99: #fffbff,
    100: #ffffff,
  ),
  /*
   * SECONDARY color palette.
   * Purpose: Accent color used less frequently than primary, providing distinction.
   * Typical Uses: Secondary buttons, selection controls (sliders, switches, checkboxes), highlighted text, progress bars, chips.
   */
  secondary: (
    0: #000000,
    10: #1f1538,
    20: #342b4f,
    25: #3f365a,
    30: #4b4167,
    35: #574d73,
    40: #635880,
    50: #7c719a,
    60: #968ab5,
    70: #b1a5d0,
    80: #cdc0ed,
    90: #e8ddff,
    95: #f5eeff,
    98: #fdf7ff,
    99: #fffbff,
    100: #ffffff,
  ),
  /*
   * TERTIARY color palette.
   * Purpose: Contrasting accent color for elements needing distinction but less emphasis than primary/secondary. Adds balance.
   * Typical Uses: Input field accents, less critical icons, decorative elements, date/time pickers.
   */
  tertiary: (
    0: #000000,
    10: #3c002c,
    20: #5d0947,
    25: #6c1853,
    30: #7a255f,
    35: #88316b,
    40: #973d78,
    50: #b45692,
    60: #d26fad,
    70: #f189c8,
    80: #ffaedc,
    90: #ffd8eb,
    95: #ffecf3,
    98: #fff8f8,
    99: #fffbff,
    100: #ffffff,
  ),
  /*
   * NEUTRAL color palette.
   * Purpose: Used for surfaces (backgrounds) and low-emphasis content (standard text/icons). Forms the base canvas.
   * Typical Uses: App background, card/dialog backgrounds, standard text, standard icons.
   * Note: Extra tones (4, 6, 12, etc.) provide finer control for subtle surface variations or states.
   */
  neutral: (
    0: #000000,
    10: #1d1b21, // Example: Standard text color on a light background
    20: #322f36,
    25: #3d3a41,
    30: #48454d,
    35: #545158,
    40: #605d65,
    50: #79757d,
    60: #938f97,
    70: #aea9b2,
    80: #cac5cd,
    87: #ded8e1,
    90: #e6e0e9, // Example: Standard text color on a dark background, or surface color in light theme
    92: #ece6ef,
    94: #f2ecf5,
    95: #f5eff8,
    96: #f8f1fb,
    98: #fdf7ff, // Example: Main background color in light theme
    99: #fffbff,
    100: #ffffff,
    // Extra tones for fine control
    4: #0f0d13,  // Example: Main background color in dark theme
    6: #141219,
    12: #211f25, // Example: Surface color in dark theme
    17: #2b2930,
    22: #36343a,
    24: #3b383f,
  ),
  /*
   * NEUTRAL-VARIANT color palette.
   * Purpose: Used for medium-emphasis elements and details needing separation from neutral surfaces.
   * Typical Uses: Component outlines (text fields), dividers, disabled text/components, secondary text labels.
   */
  neutral-variant: (
    0: #000000,
    10: #1d1a25,
    20: #322f3a,
    25: #3d3946,
    30: #494551, // Example: Text field outline in dark theme
    35: #55505d,
    40: #615c69,
    50: #7a7583, // Example: Text field outline in light theme
    60: #948e9d,
    70: #afa9b8,
    80: #cbc4d3, // Example: Disabled text color on dark background
    90: #e7e0ef, // Example: Disabled text color on light background
    95: #f5eefe,
    98: #fdf7ff,
    99: #fffbff,
    100: #ffffff,
  ),
  /*
   * ERROR color palette.
   * Purpose: Specifically used to indicate errors, warnings, or destructive actions. Demands user attention.
   * Typical Uses: Error messages, invalid input field indicators, destructive action buttons (Delete), error snackbars/banners.
   */
  error: (
    0: #000000,
    10: #410002, // Example: Error text on error container (dark theme)
    20: #690005,
    25: #7e0007,
    30: #93000a,
    35: #a80710,
    40: #ba1a1a, // Example: Error text color (light theme), Error icon/button (light theme)
    50: #de3730,
    60: #ff5449,
    70: #ff897d,
    80: #ffb4ab, // Example: Error text color (dark theme), Error icon/button (dark theme)
    90: #ffdad6, // Example: Error container background (light theme)
    95: #ffedea,
    98: #fff8f7,
    99: #fffbff, // Example: Error text on error container (light theme)
    100: #ffffff,
  ),
);

/*
 * Bundles the common color roles (secondary, neutral, neutral-variant, error)
 * that are typically included alongside both primary and tertiary palettes
 * when defining a complete theme structure.
 */
$_rest: (
  secondary: map.get($_palettes, secondary),
  neutral: map.get($_palettes, neutral),
  neutral-variant: map.get($_palettes,  neutral-variant),
  error: map.get($_palettes, error),
);

/*
 * Creates a complete color palette map intended for defining a theme
 * primarily based on the 'primary' color role. It includes primary itself
 * plus all the common roles from $_rest.
 */
$primary-palette: map.merge(map.get($_palettes, primary), $_rest);

/*
 * Creates a complete color palette map intended for defining a theme
 * primarily based on the 'tertiary' color role (less common, but possible).
 * It includes tertiary itself plus all the common roles from $_rest.
 */
$tertiary-palette: map.merge(map.get($_palettes, tertiary), $_rest);
